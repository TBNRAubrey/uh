#include <stdio.h>
#include <fstream>
#include <filesystem>
#include "device_management_backend.pb.h"
#include "chrome_device_policy.pb.h"
using namespace std;

int main(int argc, char *argv[]) {
    enterprise_management::PolicyFetchResponse PFR;
    enterprise_management::PolicyData PD;
    enterprise_management::ChromeDeviceSettingsProto CDSP;

    if (argc != 3) {
        printf("%s [/path/to/policy.XX] [--new-arguments]\n", argv[0]);
        exit(1);
    }

    string infile(argv[1]);

    std::filesystem::copy_file(infile, infile + ".bak");

    fstream input(infile, ios::in | ios::binary);
    PFR.ParseFromIstream(&input);
    input.close();
    PD.ParseFromString(PFR.policy_data());
    CDSP.ParseFromString(PD.policy_value());

    enterprise_management::StartUpFlagsProto *SUFP = CDSP.mutable_start_up_flags();
    SUFP->add_flags(argv[2]);

    string PATCHED_CDSP;
    CDSP.SerializeToString(&PATCHED_CDSP);
    PD.set_policy_value(PATCHED_CDSP);

    string PATCHED_PD;
    PD.SerializeToString(&PATCHED_PD);
    PFR.set_policy_data(PATCHED_PD);

    ofstream output(infile, ios::out | ios::binary);
    PFR.SerializeToOstream(&output);
    output.close();

    return 0;
}
